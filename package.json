{
  "name": "backend",
  "private": true,
  "version": "0.0.1",
  "main": "server.js",
  "dependencies": {
    "@tsconfig/node22": "22.0.0",
    "@types/cookie-parser": "1.4.7",
    "@types/cors": "2.8.17",
    "@types/express": "4.17.21",
    "@types/node": "22.6.1",
    "cookie-parser": "1.4.6",
    "cors": "2.8.5",
    "express": "4.21.0",
    "helmet": "7.1.0",
    "knex": "3.1.0",
    "knex-paginate": "3.1.4",
    "pg": "8.13.0",
    "pino": "9.4.0",
    "pino-pretty": "11.2.2",
    "typescript": "5.6.2",
    "zod": "3.23.8",
    "zod-validation-error": "3.4.0"
  },
  "devDependencies": {
    "@eslint/js": "9.11.1",
    "@faker-js/faker": "9.0.2",
    "@types/bun": "1.1.10",
    "@types/supertest": "6.0.2",
    "bun-bagel": "1.1.0",
    "eslint": "9.11.1",
    "knex-types": "0.5.0",
    "supertest": "7.0.0",
    "typescript-eslint": "8.7.0"
  },
  "scripts": {
    "start": "NODE_ENV=production bun src/server.ts",
    "start:dev": "trap 'bun database:stop' EXIT; bun database:start:dev && export $(cat .env.local | xargs) && bun --hot src/server.ts",
    "database:start": "docker run --name rdga_db --rm -d -p 5432:5432 -e POSTGRES_USER=rdga_dev -e POSTGRES_PASSWORD=java_script_i_love_it -e POSTGRES_DB=rdga_dev_db postgres:16-alpine",
    "database:start:dev": "bun database:start && bun migrate:latest && bun seed:run",
    "database:stop": "docker stop rdga_db",
    "migration:make": "bunx knex migrate:make --migrations-directory=src/database/migrations -x ts",
    "migrate:latest": "bunx knex migrate:latest --knexfile src/database/knexfile.ts",
    "migrate:up": "bunx knex migrate:up --knexfile database/knexfile.ts",
    "migrate:down": "bunx knex migrate:down --knexfile src/database/knexfile.ts",
    "migrate:rollback": "bunx knex migrate:rollback --knexfile src/database/knexfile.ts",
    "migrate:latest:production": "bunx knex migrate:latest --knexfile src/database/knexfile.ts --env production",
    "seed:make": "knex seed:make -x ts",
    "seed:run": "knex seed:run --knexfile src/database/knexfile.ts",
    "check": "bun eslint:check && bun types:check",
    "eslint:check": "eslint .",
    "types:check": "tsc --noEmit",
    "test:coverage": "bun test --coverage --todo",
    "generate:types": "NODE_PATH=src bun src/knex-types.ts && cp ./src/types/db.ts ../web/src/types/db.ts"
  }
}
